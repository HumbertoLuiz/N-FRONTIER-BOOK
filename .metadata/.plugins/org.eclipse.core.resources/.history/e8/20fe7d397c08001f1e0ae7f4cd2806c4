package com.nofrontier.book.domain.services;

import java.util.Optional;
import java.util.logging.Logger;

import org.springframework.beans.factory.annotation.Autowired;
import org.springframework.http.ResponseEntity;
import org.springframework.security.authentication.AuthenticationManager;
import org.springframework.security.authentication.BadCredentialsException;
import org.springframework.security.authentication.UsernamePasswordAuthenticationToken;
import org.springframework.security.core.userdetails.UserDetails;
import org.springframework.security.core.userdetails.UserDetailsService;
import org.springframework.security.core.userdetails.UsernameNotFoundException;
import org.springframework.stereotype.Service;

import com.nofrontier.book.core.security.jwt.JwtTokenProvider;
import com.nofrontier.book.domain.model.User;
import com.nofrontier.book.domain.repository.UserRepository;
import com.nofrontier.book.dto.v1.security.AccountCredentialsDto;
import com.nofrontier.book.dto.v1.security.TokenDto;

@Service
public class AuthService implements UserDetailsService {

	private Logger logger = Logger.getLogger(PersonService.class.getName());

	@Autowired
	private UserRepository userRepository;

	@Override
	public UserDetails loadUserByUsername(String username)
			throws UsernameNotFoundException {
		logger.info("Finding one user by name " + username + "!");
		Optional<User> user = userRepository.findByUsername(username);
		if (user != null) {
			return user.get();
		} else {
			throw new UsernameNotFoundException(
					"Username" + username + " not found!");
		}
	}

}
